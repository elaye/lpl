{
  "swagger": "2.0",
  "info": {
    "description": "Le permis libre API",
    "version": "1.0.0",
    "title": "Le Permis Libre",
    "termsOfService": ""
  },
  "host": "lepermmislibre.fr",
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "timeSlots",
      "description": "Operations about time slots"
    },
    {
      "name": "bookedTimeSlots",
      "description": "Operations about booked time slots"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/timeSlots": {
      "get": {
        "tags": [
          "timeSlots"
        ],
        "summary": "List time slots",
        "description": "",
        "operationId": "listTimeSlots",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List available time slots nationwide",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSlot"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/timeSlots/city/{cityId}": {
      "get": {
        "tags": [
          "timeSlots"
        ],
        "summary": "List time slots for city {cityId}",
        "description": "",
        "operationId": "listTimeSlotsByCity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "ID of city",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List available time slots citywide",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TimeSlot"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/bookdeTimeSlots": {
      "get": {
        "tags": [
          "bookedTimeSlots"
        ],
        "summary": "List booked time slots",
        "description": "",
        "operationId": "listBookedTimeSlots",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List booked time slots nationwide",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookedTimeSlot"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/bookedTimeSlots/city/{cityId}": {
      "get": {
        "tags": [
          "bookedTimeSlots"
        ],
        "summary": "List booked time slots for city {cityId}",
        "description": "",
        "operationId": "listBookedTimeSlotsByCity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cityId",
            "in": "path",
            "description": "ID of city",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "List booked time slots citywide",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BookedTimeSlot"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/Address"
        },
        "status": {
          "type": "string",
          "description": "User Status",
          "enum": [
            "candidate",
            "instructor",
            "admin"
          ]
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        }
      }
    },
    "TimeSlot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "instructorId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BookedTimeSlot": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "city": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "startLocation": {
          "$ref": "#/definitions/Address"
        },
        "instructorId": {
          "type": "integer",
          "format": "int64"
        },
        "candidateId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}